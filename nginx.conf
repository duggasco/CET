events {
    worker_connections 1024;
}

http {
    upstream app_backend {
        server app:9095;
    }

    upstream v1_backend {
        server app-v1:9095;
    }

    upstream v2_backend {
        server app-v2:9095;
    }

    # Split clients for A/B testing
    split_clients "${remote_addr}" $ab_test_backend {
        10%     v2_backend;  # 10% to v2
        *       v1_backend;  # 90% to v1
    }

    server {
        listen 80;
        
        # Main app with feature flags
        location / {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Direct v1 access for testing
        location /v1/ {
            rewrite ^/v1/(.*) /$1 break;
            proxy_pass http://v1_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Direct v2 access for testing
        location /v2/ {
            rewrite ^/v2/(.*) /$1 break;
            proxy_pass http://v2_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # A/B test endpoint
        location /ab/ {
            rewrite ^/ab/(.*) /$1 break;
            proxy_pass http://$ab_test_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header X-AB-Test-Group $ab_test_backend;
        }
    }
}